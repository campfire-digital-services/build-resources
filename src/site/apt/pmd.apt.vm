~~ This file is part of build-resources.
~~
~~ build-resources is free software: you can redistribute it and/or
~~ modify it under the terms of the GNU General Public License as published by the
~~ Free Software Foundation, either version 3 of the License, or (at your option)
~~ any later version.
~~
~~ build-resources is distributed in the hope that it will be useful,
~~ but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
~~ or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
~~ more details.
~~
~~ You should have received a copy of the GNU General Public License along with
~~ build-resources. If not, see <http://www.gnu.org/licenses/>.

~~ NOTE: For help with the syntax of this file, see: http://maven.apache.org/doxia/references/apt-format.html

    ------
    PMD Configuration
    ------
    Martin Lau [martin.lau@permeance.com.au]
    ------
    2012-10-08
    ------

Introduction

    This project contains a customised {{{http://pmd.sourceforge.net}PMD}} configuration which attempts to walk the
    difficult line between "overly paranoid and won't even pass normal code" and "how the hell does this even work".

    The configuration discussed below is open to debate and discussion. If there is anything you feel particularly
    strongly about, {{{${project.issueManagement.url}}open a ticket}}.

* Disabling checks

    Checks can be disabled by using PMD's standard suppression mechanism leveraging java's @Override annotation:

-------
@SuppressWarnings("PMD.EmptyCatchBlock")
public boolean myMethod() {
    try {
        return doSomething();
    }
    catch (Exception e) {};
    finally {
        return false;
    }
}
-------

    However, be warned that every time a check is ignored God kills a kitten.

* Included rulesets

    This configuration includes the following PMD rulesets and configurations:

** {{{http://pmd.sourceforge.net/pmd-4.3/rules/basic.html}Basic}}

    These rules are used as is, with one reconfiguration:

    * {{{http://pmd.sourceforge.net/pmd-4.3/rules/basic.html#EmptyCatchBlock}EmptyCatchBlock}} is reconfigured to allow
      documented catch blocks as some APIs we commonly use don't provide a meaningful check to execute first:

-------
try {
    return journalArticleLocalService.getArticleByUrlTitle(groupId, urlTitle);
}
catch (NoSuchArticleException e) {
    // Why is there no containsByUrlTitle() method?
}
-------

** {{{http://pmd.sourceforge.net/pmd-4.3/rules/braces.html}Braces}}

    These rules are used as is (and require the use of braces everywhere).

** {{{http://pmd.sourceforge.net/pmd-4.3/rules/clone.html}Clone}}

    These rules are used as is.

** {{{http://pmd.sourceforge.net/pmd-4.3/rules/codesize.html}Code Size}}

    These rules are used as is.

** {{{http://pmd.sourceforge.net/pmd-4.3/rules/controversial.html}Controversial}}

    These rules are mostly used as is, with two exclusions:

    * {{{http://pmd.sourceforge.net/pmd-4.3/rules/controversial.html#OnlyOneReturn}OnlyOneReturn}} is excluded as it
      forces keeping lines of logic and variables alive longer for the life of the method - where that branch of code
      could exit cleanly straight away.

    * {{{http://pmd.sourceforge.net/pmd-4.3/rules/controversial.html#AvoidLiteralsInIfCondition}AvoidLiteralsInIfCondition}}
      is excluded as it disallows things like null checks such as: if (x == null) { ... }.

** {{{http://pmd.sourceforge.net/pmd-4.3/rules/coupling.html}Coupling}}

    These rules are used as is.

** {{{http://pmd.sourceforge.net/pmd-4.3/rules/design.html}Design}}

    These rules are used as is.

** {{{http://pmd.sourceforge.net/pmd-4.3/rules/finalizers.html}Finalizers}}

    These rules are used as is.

** {{{http://pmd.sourceforge.net/pmd-4.3/rules/imports.html}Imports}}

    These rules are mostly used as is, with one exclusion:

    * {{{http://pmd.sourceforge.net/pmd-4.3/rules/imports.html#TooManyStaticImports}TooManyStaticImports}} is excluded
      as modern API design makes good and effective use of static methods and the readability that comes from staticly
      importing them. If you argue that it makes the source of those methods difficult to track, you should use an IDE
      with half-decent navigation!

** {{{http://pmd.sourceforge.net/pmd-4.3/rules/j2ee.html}J2EE}}

    These rules are used as is.

** {{{http://pmd.sourceforge.net/pmd-4.3/rules/javabeans.html}JavaBeans}}

    These rules are used as is.

** {{{http://pmd.sourceforge.net/pmd-4.3/rules/naming.html}Naming}}

    These rules are used as is, with one reconfiguration:

    * {{{http://pmd.sourceforge.net/pmd-4.3/rules/naming.html#LongVariable}LongVariable}} is reconfigured to allow
      variables with a length of up to 32 characters. We have wide monitors and auto-completion - why not use them?

** {{{http://pmd.sourceforge.net/pmd-4.3/rules/optimizations.html}Optimizations}}

    These rules are used as is.

** {{{http://pmd.sourceforge.net/pmd-4.3/rules/strictexception.html}Strict Exceptions}}

    These rules are used as is.

** {{{http://pmd.sourceforge.net/pmd-4.3/rules/strings.html}Strings}}

    These rules are used as is, with one reconfiguration:

    * {{{http://pmd.sourceforge.net/pmd-4.3/rules/strings.html#AvoidDuplicateLiterals}AvoidDuplicateLiterals}} is configured to allow
      duplicate values in annotations, to prevent warning on things like:

-------
@SuppressWarnings("PMD.something")
public void myMethod() {}

@SuppressWarnings("PMD.something")
public void myMethod() {}
-------

** {{{http://pmd.sourceforge.net/pmd-4.3/rules/sunsecure.html}Sun Security}}

    These rules are used as is.

** {{{http://pmd.sourceforge.net/pmd-4.3/rules/typeresolution.html}Type Resolution}}

    These rules are used as is.

** {{{http://pmd.sourceforge.net/pmd-4.3/rules/unusedcode.html}Unused Code}}

    These rules are used as is.


